import{_ as e,o as t,c as a,a as s}from"./app.2695e33d.js";const u=JSON.parse('{"title":"What is FFF?","description":"","frontmatter":{"title":"What is FFF?"},"headers":[{"level":2,"title":"Motivation","slug":"motivation"},{"level":2,"title":"Why not just reuse the existing ones?","slug":"why-not-just-reuse-the-existing-ones"},{"level":2,"title":"Naming Rules","slug":"naming-rules"}],"relativePath":"intro/what-is-fff.md","lastUpdated":1658385698000}'),r={name:"intro/what-is-fff.md"},o=s('<h1 id="what-is-fff-flavored-frontmatter" tabindex="-1">What is FFF Flavored Frontmatter? <a class="header-anchor" href="#what-is-fff-flavored-frontmatter" aria-hidden="true">#</a></h1><p>Yet Another Opinionated Frontmatter Variable Specs.</p><h2 id="motivation" tabindex="-1">Motivation <a class="header-anchor" href="#motivation" aria-hidden="true">#</a></h2><p>I&#39;m working on several static blog generators (see <a href="/intro/implementation.html">Implementation</a> for details),</p><p>so I&#39;d like to design a FrontMatter Variable Specs to be shared between these projects.</p><h2 id="why-not-just-reuse-the-existing-ones" tabindex="-1">Why not just reuse the existing ones? <a class="header-anchor" href="#why-not-just-reuse-the-existing-ones" aria-hidden="true">#</a></h2><p>I&#39;m not satisfied with the existing (Hexo, Hugo) FrontMatter Variable Specs, they are a bit cumbersome, e.g. <code>camelCase</code>.</p><p>FFF makes naming as concise and meaningful as possible, and proposes customizable arrays like <code>flags</code>.</p><h2 id="naming-rules" tabindex="-1">Naming Rules <a class="header-anchor" href="#naming-rules" aria-hidden="true">#</a></h2><p>Use <code>snake_case</code> because it is JSON friendly and not as prone to wrong input as <code>camelCase</code>, the specific naming is chosen between common static blog generators, <a href="https://microformats.org/wiki/microformats2" target="_blank" rel="noopener noreferrer">Microformats</a>, and <a href="https://www.jsonfeed.org/version/1.1/" target="_blank" rel="noopener noreferrer">JSON Feed</a>.</p>',10),n=[o];function i(h,d,l,c,f,m){return t(),a("div",null,n)}var g=e(r,[["render",i]]);export{u as __pageData,g as default};
