import{_ as s,o as a,c as o,V as n}from"./chunks/framework.d3dc5784.js";const i=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"references/fff-flavored-frontmatter.fffoptionaltype.md","filePath":"references/fff-flavored-frontmatter.fffoptionaltype.md","lastUpdated":null}'),p={name:"references/fff-flavored-frontmatter.fffoptionaltype.md"},l=n('<p><a href="./">Home</a> &gt; <a href="./fff-flavored-frontmatter.html">fff-flavored-frontmatter</a> &gt; <a href="./fff-flavored-frontmatter.fffoptionaltype.html">FFFOptionalType</a></p><h2 id="fffoptionaltype-type" tabindex="-1">FFFOptionalType type <a class="header-anchor" href="#fffoptionaltype-type" aria-label="Permalink to &quot;FFFOptionalType type&quot;">â€‹</a></h2><p>Optional Type Util</p><p><strong>Signature:</strong></p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-darker vp-code-dark"><code><span class="line"><span style="color:#C792EA;">type</span><span style="color:#EEFFFF;"> </span><span style="color:#FFCB6B;">FFFOptionalType</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">T</span><span style="color:#EEFFFF;"> </span><span style="color:#C792EA;">extends</span><span style="color:#EEFFFF;"> (</span><span style="color:#FFCB6B;">boolean</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">|</span><span style="color:#EEFFFF;"> </span><span style="color:#FFCB6B;">undefined</span><span style="color:#EEFFFF;">)</span><span style="color:#89DDFF;">,</span><span style="color:#EEFFFF;"> </span><span style="color:#FFCB6B;">Required</span><span style="color:#89DDFF;">,</span><span style="color:#EEFFFF;"> </span><span style="color:#FFCB6B;">Optional</span><span style="color:#89DDFF;">&gt;</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">=</span><span style="color:#EEFFFF;"> </span><span style="color:#FFCB6B;">T</span><span style="color:#EEFFFF;"> </span><span style="color:#C792EA;">extends</span><span style="color:#EEFFFF;"> </span><span style="color:#FFCB6B;">undefined</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">?</span><span style="color:#EEFFFF;"> </span><span style="color:#FFCB6B;">Required</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">|</span><span style="color:#EEFFFF;"> </span><span style="color:#FFCB6B;">Optional</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">:</span><span style="color:#EEFFFF;"> </span><span style="color:#FFCB6B;">T</span><span style="color:#EEFFFF;"> </span><span style="color:#C792EA;">extends</span><span style="color:#EEFFFF;"> </span><span style="color:#FFCB6B;">true</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">?</span><span style="color:#EEFFFF;"> </span><span style="color:#FFCB6B;">Optional</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">:</span><span style="color:#EEFFFF;"> </span><span style="color:#FFCB6B;">Required</span><span style="color:#89DDFF;">;</span></span></code></pre><pre class="shiki material-theme-lighter vp-code-light"><code><span class="line"><span style="color:#9C3EDA;">type</span><span style="color:#90A4AE;"> </span><span style="color:#E2931D;">FFFOptionalType</span><span style="color:#39ADB5;">&lt;</span><span style="color:#E2931D;">T</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">extends</span><span style="color:#90A4AE;"> (</span><span style="color:#E2931D;">boolean</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">|</span><span style="color:#90A4AE;"> </span><span style="color:#E2931D;">undefined</span><span style="color:#90A4AE;">)</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#E2931D;">Required</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#E2931D;">Optional</span><span style="color:#39ADB5;">&gt;</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> </span><span style="color:#E2931D;">T</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">extends</span><span style="color:#90A4AE;"> </span><span style="color:#E2931D;">undefined</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">?</span><span style="color:#90A4AE;"> </span><span style="color:#E2931D;">Required</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">|</span><span style="color:#90A4AE;"> </span><span style="color:#E2931D;">Optional</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">:</span><span style="color:#90A4AE;"> </span><span style="color:#E2931D;">T</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">extends</span><span style="color:#90A4AE;"> </span><span style="color:#E2931D;">true</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">?</span><span style="color:#90A4AE;"> </span><span style="color:#E2931D;">Optional</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">:</span><span style="color:#90A4AE;"> </span><span style="color:#E2931D;">Required</span><span style="color:#39ADB5;">;</span></span></code></pre></div>',5),e=[l];function t(r,F,c,y,E,f){return a(),o("div",null,e)}const d=s(p,[["render",t]]);export{i as __pageData,d as default};
