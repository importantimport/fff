import{o as r,c as i,b as e,u as a,a as n}from"./app.2a721928.js";const o="0.4.0-alpha.0",p=n('<h1 id="implementation" tabindex="-1">Implementation <a class="header-anchor" href="#implementation" aria-hidden="true">#</a></h1><p>All projects known to implement or partially implement FFF are listed here.</p><ul><li><a href="https://github.com/importantimport/urara" target="_blank" rel="noreferrer">Urara</a> - Sweet, Powerful, IndieWeb-Compatible SvelteKit Blog Starter.</li><li><a href="https://github.com/importantimport/gumori" target="_blank" rel="noreferrer">Gumori</a> - Minimal Stylesheets, IndieWeb-Compatible Astro Blog Starter. <ul><li><a href="https://github.com/importantimport/gumori-you" target="_blank" rel="noreferrer">Gumori You</a> - Bringing Material Design 3 to the Astro Blog.</li></ul></li></ul><p>Add yours is also welcome! You can decide for yourself which variables you want to be compatible with (and expand on them)</p><blockquote><p>But pls don&#39;t have variables that are close in function but named differently: e.g. <code>lastmod</code> and <code>updated</code>.</p></blockquote><h2 id="badges" tabindex="-1">Badges <a class="header-anchor" href="#badges" aria-hidden="true">#</a></h2><p>If your project is already FFF compatible, you can use the badge from <a href="https://shields.io" target="_blank" rel="noreferrer">shields.io</a> to illustrate this.</p>',7),c=["src"],d=["src"],h=["src"],m=["src"],u=n(`<p>Replace <code>#badge-here</code> with one of the image links above for use in Markdown:</p><blockquote><p>Don&#39;t forget to note the version!</p></blockquote><div class="language-md"><button title="Copy Code" class="copy"></button><span class="lang">md</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">![</span><span style="color:#C3E88D;">fff</span><span style="color:#89DDFF;">](</span><span style="color:#C3E88D;font-weight:bold;">#badge-here</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;">](</span><span style="color:#F07178;font-weight:bold;">https://fff.js.org</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#39ADB5;">[</span><span style="color:#39ADB5;">![</span><span style="color:#91B859;">fff</span><span style="color:#39ADB5;">](</span><span style="color:#91B859;font-weight:bold;">#badge-here</span><span style="color:#39ADB5;">)</span><span style="color:#39ADB5;">](</span><span style="color:#E53935;font-weight:bold;">https://fff.js.org</span><span style="color:#39ADB5;">)</span></span>
<span class="line"></span></code></pre></div>`,3),b=JSON.parse('{"title":"Implementation","description":"","frontmatter":{"title":"Implementation"},"headers":[{"level":2,"title":"Badges","slug":"badges","link":"#badges","children":[]}],"relativePath":"intro/implementation.md","lastUpdated":1667731925000}'),g={name:"intro/implementation.md"},F=Object.assign(g,{setup(_){const t=o.split(".").slice(0,2).map((s,l)=>l===1&&/[a-z]/i.test(o)?s-1:s).join(".");return(s,l)=>(r(),i("div",null,[p,e("ul",null,[e("li",null,[e("img",{src:`https://img.shields.io/badge/%F0%9F%8C%9F%20F%20F%20F-${a(t)}-yellow?style=plastic`,alt:"plastic"},null,8,c)]),e("li",null,[e("img",{src:`https://img.shields.io/badge/%F0%9F%8C%9F%20F%20F%20F-${a(t)}-yellow?style=flat`,alt:"flat"},null,8,d)]),e("li",null,[e("img",{src:`https://img.shields.io/badge/%F0%9F%8C%9F%20F%20F%20F-${a(t)}-yellow?style=flat-square`,alt:"flat-square"},null,8,h)]),e("li",null,[e("img",{src:`https://img.shields.io/badge/%F0%9F%8C%9F%20F%20F%20F-${a(t)}-yellow?style=for-the-badge`,alt:"for-the-badge"},null,8,m)])]),u]))}});export{b as __pageData,F as default};
